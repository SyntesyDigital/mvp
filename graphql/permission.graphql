
################################
#   TYPE
################################
type Permission {
  id: ID!
  name: String!
  description: String!
  identifier: String!
  roles: [Role!]! @hasMany
  group: PermissionGroup! @hasOne
}

type PermissionGroup {
  id: ID!
  name: String!
  permissions: [Permission!]! @hasMany
}

################################
#   INPUT
################################


################################
#   QUERY
################################
extend type Query {

    permissions: [Permission!]!
        @all(
            model: "Modules\\Architect\\Core\\RolesPermissions\\Entities\\Permission"
        )
        
    permission(id: ID! @eq): Permission
        @find(
            model: "Modules\\Architect\\Core\\RolesPermissions\\Entities\\Permission"
        )

    permissionGroups: [PermissionGroup!]!
        @all(
            model: "Modules\\Architect\\Core\\RolesPermissions\\Entities\\PermissionGroup"
        )
        
    permissionGroup(id: ID! @eq): PermissionGroup
        @find(
            model: "Modules\\Architect\\Core\\RolesPermissions\\Entities\\PermissionGroup"
        )
}

################################
#   MUTATOR
################################
extend type Mutation {

    createPermission(
        name: String!
        identifier: String!
        description: String!
        group_id: ID!
    ): Permission!
        @create(
            model: "Modules\\Architect\\Core\\RolesPermissions\\Entities\\Permission"
        )

    updatePermission(
        id: ID!
        name: String!
        identifier: String!
        description: String!
        group_id: ID!
    ): Permission
        @update(
            model: "Modules\\Architect\\Core\\RolesPermissions\\Entities\\Permission"
        )

    deletePermisson(id: ID!): Permission
        @delete(
            model: "Modules\\Architect\\Core\\RolesPermissions\\Entities\\Permission"
        )
}